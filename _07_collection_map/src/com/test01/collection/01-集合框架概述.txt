
1. 記憶體層級中需要針對多個數據儲存，可以考慮容器有 陣列、集合

2. 陣列特點
   > 一旦初始化，長度就是確定的
   > 陣列中多個元素是依次緊密排列的，有序的，可重複的
   > (優點)一旦初始化完成，其元素類型即確定，不是此類型的元素，就不能添加到此陣列中
   > 元素類型可以是基本資料形態也可以是參考資料型態

   陣列弊端
   > 一旦初始化，長度就不可變
   > 對於無序的、不可重複的場景的多個數據無能為力
   > 陣列中可用的屬或、方法都極少。具體需求都需要自己組織程式邏輯
   > 針對陣列中的元素刪除、插入的操作、效率比較差

3. Java集合框架
java.util.Collection 儲存單一數據
    |----子介面: List:儲存有序的、可重複的數據("動態"陣列)
            |---ArrayList、LinkedList、Vector

    |----子介面: Set: 儲存無序的、不可重複的數據
            |---HashSet、LinkedHashSet、TreeSet


java.util.Map   儲存一組一組數據(key-value) -->y-f(x)
    |---HashMap、LinkedHashMap、TreeMap、Hashtable、Properties


4. 學習程度把握
層次1: 針對具體特點的多個數據、知道該選擇相應的適合的介面、進行實例化、使用常用方法
層次2: 區分介面中不同實現類別的區別
****************************
層次3: ①針對常用的實現類、需熟悉底層源碼 ②熟悉常見的數據結構