例外處理方式2:
1.格式 方法名() throws 例外類型1, 例外類型2, ...

2.舉例

public void test() throws 例外類型1, 例外類型2,, {

}

3.是否處理了異常
>throws的方式，僅是將可能出現的例外拋給了此方法的調用者，調用者仍然需要考慮如何處理異常
 throws方式不算是真正處理了異常

4.方法重寫的要求(針對編譯時例外
子類別重寫的方法拋出的例外類型與父類拋出的例外類型相同，或是父類方法拋出的例外類型的子類

5.開發中如何選擇例外處理的方式
>資源關閉一定要被執行 使用try-catch-finally
>父類方法沒有throws, 重寫方法只能用 try-catch-finally
>開發中 方法a 依次調用了方法b,c,d， 方法b,c,d之間為遞進關係，此時方法b,c,d中有異常
 通常會選擇使用throws，而方法a中通常使用try-catch-finally